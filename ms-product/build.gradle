plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
}

group = 'az.company'
version = '1.0.0'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //db
    implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'org.postgresql:postgresql'

    //openapi
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}"

    //zipkin
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

    //spring cloud
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    //util
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //test
    implementation group: 'org.apache.groovy', name: 'groovy', version: "${groovyVersion}"
    testImplementation group: 'org.spockframework', name: 'spock-spring', version: "${spockSpringVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation("io.github.benas:random-beans:${randomBeansVersion}")
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
